buildscript {
    repositories { jcenter() }
    dependencies {
    }
}

apply plugin: 'java'
apply plugin: 'maven-publish'

def vertxVersion = '3.2.0'
//def vertxVersion = '3.0.0-SNAPSHOT'
version = '1.0.0'

sourceCompatibility = 1.8 
targetCompatibility = 1.8 

if (!JavaVersion.current().java8Compatible) {
    throw new IllegalStateException("This needs Java 8. You are using ${JavaVersion.current()}.")
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'xyz.bpdp.vertx'
            artifactId 'blazegraph-service'
            version '1.0.0'
            from components.java
        }
    }
}

repositories {
    mavenCentral()
    maven { url 'http://oss.sonatype.org/content/repositories/snapshots/' }
    jcenter()
    mavenCentral()
    mavenLocal()
    maven {url "http://www.systap.com/maven/releases"}
}

dependencies {
    compile 'io.vertx:vertx-core:' + vertxVersion
    compile 'io.vertx:vertx-web:' + vertxVersion
    compile 'io.vertx:vertx-codetrans:' + vertxVersion
    compile 'io.vertx:vertx-codegen:' + vertxVersion
    compile 'io.vertx:vertx-docgen:' + vertxVersion
    compile 'io.vertx:vertx-service-proxy:' + vertxVersion
    compile 'io.vertx:vertx-service-factory:' + vertxVersion
    compile 'com.bigdata:bigdata:1.5.3'
    compile 'io.vertx:vertx-unit:' + vertxVersion
    testCompile 'io.vertx:vertx-unit:' + vertxVersion
    testCompile 'junit:junit:4.12'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

test {
    testLogging.showStandardStreams = true
    testLogging {
        exceptionFormat = 'full'
    }
}

def generatedSrcPath="src/generated"
def generatedSrcDir = file(generatedSrcPath)

sourceSets {
    main {
        java.srcDirs += generatedSrcDir
        output.dir(builtBy: 'generateServiceProxy', generatedSrcPath)
    }
}

task generateServiceProxy(type: JavaCompile, description: 'Generates EBServiceProxies') {
    source = sourceSets.main.java
    classpath = configurations.compile
    destinationDir = generatedSrcDir
    options.compilerArgs = [
        "-proc:only",
        "-processor", "io.vertx.codegen.CodeGenProcessor",
        "-AoutputDirectory=$generatedSrcPath"
    ]
}

compileJava.dependsOn generateServiceProxy
compileJava {
    //enable compilation in a separate daemon process
    options.fork = true
    options.compilerArgs << '-Xdoclint:none'
}

clean {
    delete += generatedSrcDir
}
